#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# Print the IP address
_IP=$(hostname -I) || true
if [ "$_IP" ]; then
  printf "My IP address is %s\n" "$_IP"
fi

# Append something unique to the hostapd wireless name if it's left default.
_SIMPLEAQ_HOSTAPD_NAME=$(grep "^simpleaq_hostapd_name=" /etc/environment | cut -c23-)
_SIMPLEAQ_HOSTAPD_PASSWORD=$(grep "^simpleaq_hostapd_password=" /etc/environment | cut -c27-)
_SIMPLEAQ_HOSTAPD_HIDE_SSID=$(grep "^simpleaq_hostapd_hide_ssid=" /etc/environment | cut -c28-)

# Store the current SSID
_CURRENT_SSID=$(grep "^\s*ssid=" /etc/hostapd/hostapd.conf | cut -d'"' -f2)

if [ "$_SIMPLEAQ_HOSTAPD_NAME" = "SimpleAQ" ]; then
  _PI_SSID=SimpleAQ-$(cat /etc/machine-id | cut -c1-4)
  sed -i -s "s/^\s*ssid=.*/ssid=$_PI_SSID/" /etc/hostapd/hostapd.conf
  sed -i -s "s/^\s*wpa_passphrase=.*/wpa_passphrase=$_SIMPLEAQ_HOSTAPD_PASSWORD/" /etc/hostapd/hostapd.conf
  sed -i -s "s/^\s*ignore_broadcast_ssid=.*/ignore_broadcast_ssid=$_SIMPLEAQ_HOSTAPD_HIDE_SSID/" /etc/hostapd/hostapd.conf

  sed -i -s "s/^simpleaq_hostapd_name=.*/simpleaq_hostapd_name=$_PI_SSID/" /etc/environment
else
  sed -i -s "s/^\s*ssid=.*/ssid=$_SIMPLEAQ_HOSTAPD_NAME/" /etc/hostapd/hostapd.conf
  sed -i -s "s/^\s*wpa_passphrase=.*/wpa_passphrase=$_SIMPLEAQ_HOSTAPD_PASSWORD/" /etc/hostapd/hostapd.conf
  sed -i -s "s/^\s*ignore_broadcast_ssid=.*/ignore_broadcast_ssid=$_SIMPLEAQ_HOSTAPD_HIDE_SSID/" /etc/hostapd/hostapd.conf
fi

# Check the new SSID
_NEW_SSID=$(grep "^\s*ssid=" /etc/hostapd/hostapd.conf | cut -d'"' -f2)

# Restart hostapd if the SSID has changed
if [ "$_CURRENT_SSID" != "$_NEW_SSID" ]; then
  echo "SSID has changed from $_CURRENT_SSID to $_NEW_SSID. Restarting hostapd..."
  systemctl restart hostapd
fi

# Don't allow any connections we didn't explicitly request.
iptables-legacy -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables-legacy -A INPUT -i wlan0 -j DROP

exit 0
